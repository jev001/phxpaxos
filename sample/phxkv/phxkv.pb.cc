// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phxkv.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "phxkv.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phxkv {

namespace {

const ::google::protobuf::Descriptor* KVOperator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KVOperator_reflection_ = NULL;
const ::google::protobuf::Descriptor* KVData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KVData_reflection_ = NULL;
const ::google::protobuf::Descriptor* KVResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KVResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_phxkv_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_phxkv_2eproto() {
  protobuf_AddDesc_phxkv_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "phxkv.proto");
  GOOGLE_CHECK(file != NULL);
  KVOperator_descriptor_ = file->message_type(0);
  static const int KVOperator_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, sid_),
  };
  KVOperator_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KVOperator_descriptor_,
      KVOperator::default_instance_,
      KVOperator_offsets_,
      -1,
      -1,
      -1,
      sizeof(KVOperator),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVOperator, _is_default_instance_));
  KVData_descriptor_ = file->message_type(1);
  static const int KVData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVData, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVData, isdeleted_),
  };
  KVData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KVData_descriptor_,
      KVData::default_instance_,
      KVData_offsets_,
      -1,
      -1,
      -1,
      sizeof(KVData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVData, _is_default_instance_));
  KVResponse_descriptor_ = file->message_type(2);
  static const int KVResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVResponse, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVResponse, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVResponse, master_nodeid_),
  };
  KVResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KVResponse_descriptor_,
      KVResponse::default_instance_,
      KVResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(KVResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_phxkv_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KVOperator_descriptor_, &KVOperator::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KVData_descriptor_, &KVData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KVResponse_descriptor_, &KVResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_phxkv_2eproto() {
  delete KVOperator::default_instance_;
  delete KVOperator_reflection_;
  delete KVData::default_instance_;
  delete KVData_reflection_;
  delete KVResponse::default_instance_;
  delete KVResponse_reflection_;
}

void protobuf_AddDesc_phxkv_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_phxkv_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013phxkv.proto\022\005phxkv\"X\n\nKVOperator\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\022\017\n\007version\030\003 \001(\004\022"
    "\020\n\010operator\030\004 \001(\r\022\013\n\003sid\030\005 \001(\r\";\n\006KVData"
    "\022\r\n\005value\030\001 \001(\014\022\017\n\007version\030\002 \001(\004\022\021\n\tisde"
    "leted\030\003 \001(\010\"M\n\nKVResponse\022\033\n\004data\030\001 \001(\0132"
    "\r.phxkv.KVData\022\013\n\003ret\030\002 \001(\005\022\025\n\rmaster_no"
    "deid\030\003 \001(\0042\327\001\n\013PhxKVServer\022-\n\003Put\022\021.phxk"
    "v.KVOperator\032\021.phxkv.KVResponse\"\000\0222\n\010Get"
    "Local\022\021.phxkv.KVOperator\032\021.phxkv.KVRespo"
    "nse\"\000\0223\n\tGetGlobal\022\021.phxkv.KVOperator\032\021."
    "phxkv.KVResponse\"\000\0220\n\006Delete\022\021.phxkv.KVO"
    "perator\032\021.phxkv.KVResponse\"\000b\006proto3", 476);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "phxkv.proto", &protobuf_RegisterTypes);
  KVOperator::default_instance_ = new KVOperator();
  KVData::default_instance_ = new KVData();
  KVResponse::default_instance_ = new KVResponse();
  KVOperator::default_instance_->InitAsDefaultInstance();
  KVData::default_instance_->InitAsDefaultInstance();
  KVResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_phxkv_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_phxkv_2eproto {
  StaticDescriptorInitializer_phxkv_2eproto() {
    protobuf_AddDesc_phxkv_2eproto();
  }
} static_descriptor_initializer_phxkv_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KVOperator::kKeyFieldNumber;
const int KVOperator::kValueFieldNumber;
const int KVOperator::kVersionFieldNumber;
const int KVOperator::kOperatorFieldNumber;
const int KVOperator::kSidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KVOperator::KVOperator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxkv.KVOperator)
}

void KVOperator::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KVOperator::KVOperator(const KVOperator& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxkv.KVOperator)
}

void KVOperator::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_ULONGLONG(0);
  operator__ = 0u;
  sid_ = 0u;
}

KVOperator::~KVOperator() {
  // @@protoc_insertion_point(destructor:phxkv.KVOperator)
  SharedDtor();
}

void KVOperator::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KVOperator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KVOperator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KVOperator_descriptor_;
}

const KVOperator& KVOperator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_phxkv_2eproto();
  return *default_instance_;
}

KVOperator* KVOperator::default_instance_ = NULL;

KVOperator* KVOperator::New(::google::protobuf::Arena* arena) const {
  KVOperator* n = new KVOperator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KVOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:phxkv.KVOperator)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KVOperator, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KVOperator*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, sid_);
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool KVOperator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxkv.KVOperator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxkv.KVOperator.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_version;
        break;
      }

      // optional uint64 version = 3;
      case 3: {
        if (tag == 24) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_operator;
        break;
      }

      // optional uint32 operator = 4;
      case 4: {
        if (tag == 32) {
         parse_operator:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operator__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sid;
        break;
      }

      // optional uint32 sid = 5;
      case 5: {
        if (tag == 40) {
         parse_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxkv.KVOperator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxkv.KVOperator)
  return false;
#undef DO_
}

void KVOperator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxkv.KVOperator)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxkv.KVOperator.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // optional uint64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  // optional uint32 operator = 4;
  if (this->operator_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->operator_(), output);
  }

  // optional uint32 sid = 5;
  if (this->sid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sid(), output);
  }

  // @@protoc_insertion_point(serialize_end:phxkv.KVOperator)
}

::google::protobuf::uint8* KVOperator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxkv.KVOperator)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxkv.KVOperator.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // optional uint64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  // optional uint32 operator = 4;
  if (this->operator_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->operator_(), target);
  }

  // optional uint32 sid = 5;
  if (this->sid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phxkv.KVOperator)
  return target;
}

int KVOperator::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxkv.KVOperator)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // optional uint64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  // optional uint32 operator = 4;
  if (this->operator_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->operator_());
  }

  // optional uint32 sid = 5;
  if (this->sid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KVOperator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxkv.KVOperator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KVOperator* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KVOperator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxkv.KVOperator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxkv.KVOperator)
    MergeFrom(*source);
  }
}

void KVOperator::MergeFrom(const KVOperator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxkv.KVOperator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.operator_() != 0) {
    set_operator_(from.operator_());
  }
  if (from.sid() != 0) {
    set_sid(from.sid());
  }
}

void KVOperator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxkv.KVOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KVOperator::CopyFrom(const KVOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxkv.KVOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KVOperator::IsInitialized() const {

  return true;
}

void KVOperator::Swap(KVOperator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KVOperator::InternalSwap(KVOperator* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(version_, other->version_);
  std::swap(operator__, other->operator__);
  std::swap(sid_, other->sid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KVOperator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KVOperator_descriptor_;
  metadata.reflection = KVOperator_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KVOperator

// optional string key = 1;
void KVOperator::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KVOperator::key() const {
  // @@protoc_insertion_point(field_get:phxkv.KVOperator.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVOperator::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxkv.KVOperator.key)
}
 void KVOperator::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxkv.KVOperator.key)
}
 void KVOperator::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxkv.KVOperator.key)
}
 ::std::string* KVOperator::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:phxkv.KVOperator.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KVOperator::release_key() {
  // @@protoc_insertion_point(field_release:phxkv.KVOperator.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVOperator::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:phxkv.KVOperator.key)
}

// optional bytes value = 2;
void KVOperator::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KVOperator::value() const {
  // @@protoc_insertion_point(field_get:phxkv.KVOperator.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVOperator::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxkv.KVOperator.value)
}
 void KVOperator::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxkv.KVOperator.value)
}
 void KVOperator::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxkv.KVOperator.value)
}
 ::std::string* KVOperator::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:phxkv.KVOperator.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KVOperator::release_value() {
  // @@protoc_insertion_point(field_release:phxkv.KVOperator.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVOperator::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxkv.KVOperator.value)
}

// optional uint64 version = 3;
void KVOperator::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 KVOperator::version() const {
  // @@protoc_insertion_point(field_get:phxkv.KVOperator.version)
  return version_;
}
 void KVOperator::set_version(::google::protobuf::uint64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVOperator.version)
}

// optional uint32 operator = 4;
void KVOperator::clear_operator_() {
  operator__ = 0u;
}
 ::google::protobuf::uint32 KVOperator::operator_() const {
  // @@protoc_insertion_point(field_get:phxkv.KVOperator.operator)
  return operator__;
}
 void KVOperator::set_operator_(::google::protobuf::uint32 value) {
  
  operator__ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVOperator.operator)
}

// optional uint32 sid = 5;
void KVOperator::clear_sid() {
  sid_ = 0u;
}
 ::google::protobuf::uint32 KVOperator::sid() const {
  // @@protoc_insertion_point(field_get:phxkv.KVOperator.sid)
  return sid_;
}
 void KVOperator::set_sid(::google::protobuf::uint32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVOperator.sid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KVData::kValueFieldNumber;
const int KVData::kVersionFieldNumber;
const int KVData::kIsdeletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KVData::KVData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxkv.KVData)
}

void KVData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KVData::KVData(const KVData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxkv.KVData)
}

void KVData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_ULONGLONG(0);
  isdeleted_ = false;
}

KVData::~KVData() {
  // @@protoc_insertion_point(destructor:phxkv.KVData)
  SharedDtor();
}

void KVData::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KVData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KVData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KVData_descriptor_;
}

const KVData& KVData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_phxkv_2eproto();
  return *default_instance_;
}

KVData* KVData::default_instance_ = NULL;

KVData* KVData::New(::google::protobuf::Arena* arena) const {
  KVData* n = new KVData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KVData::Clear() {
// @@protoc_insertion_point(message_clear_start:phxkv.KVData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KVData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KVData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, isdeleted_);
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool KVData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxkv.KVData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional uint64 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isdeleted;
        break;
      }

      // optional bool isdeleted = 3;
      case 3: {
        if (tag == 24) {
         parse_isdeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeleted_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxkv.KVData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxkv.KVData)
  return false;
#undef DO_
}

void KVData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxkv.KVData)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // optional uint64 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  // optional bool isdeleted = 3;
  if (this->isdeleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isdeleted(), output);
  }

  // @@protoc_insertion_point(serialize_end:phxkv.KVData)
}

::google::protobuf::uint8* KVData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxkv.KVData)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // optional uint64 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  // optional bool isdeleted = 3;
  if (this->isdeleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isdeleted(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phxkv.KVData)
  return target;
}

int KVData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxkv.KVData)
  int total_size = 0;

  // optional bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // optional uint64 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  // optional bool isdeleted = 3;
  if (this->isdeleted() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KVData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxkv.KVData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KVData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KVData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxkv.KVData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxkv.KVData)
    MergeFrom(*source);
  }
}

void KVData::MergeFrom(const KVData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxkv.KVData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.isdeleted() != 0) {
    set_isdeleted(from.isdeleted());
  }
}

void KVData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxkv.KVData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KVData::CopyFrom(const KVData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxkv.KVData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KVData::IsInitialized() const {

  return true;
}

void KVData::Swap(KVData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KVData::InternalSwap(KVData* other) {
  value_.Swap(&other->value_);
  std::swap(version_, other->version_);
  std::swap(isdeleted_, other->isdeleted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KVData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KVData_descriptor_;
  metadata.reflection = KVData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KVData

// optional bytes value = 1;
void KVData::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KVData::value() const {
  // @@protoc_insertion_point(field_get:phxkv.KVData.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVData::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxkv.KVData.value)
}
 void KVData::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxkv.KVData.value)
}
 void KVData::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxkv.KVData.value)
}
 ::std::string* KVData::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:phxkv.KVData.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KVData::release_value() {
  // @@protoc_insertion_point(field_release:phxkv.KVData.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KVData::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxkv.KVData.value)
}

// optional uint64 version = 2;
void KVData::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 KVData::version() const {
  // @@protoc_insertion_point(field_get:phxkv.KVData.version)
  return version_;
}
 void KVData::set_version(::google::protobuf::uint64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVData.version)
}

// optional bool isdeleted = 3;
void KVData::clear_isdeleted() {
  isdeleted_ = false;
}
 bool KVData::isdeleted() const {
  // @@protoc_insertion_point(field_get:phxkv.KVData.isdeleted)
  return isdeleted_;
}
 void KVData::set_isdeleted(bool value) {
  
  isdeleted_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVData.isdeleted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KVResponse::kDataFieldNumber;
const int KVResponse::kRetFieldNumber;
const int KVResponse::kMasterNodeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KVResponse::KVResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxkv.KVResponse)
}

void KVResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::phxkv::KVData*>(&::phxkv::KVData::default_instance());
}

KVResponse::KVResponse(const KVResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxkv.KVResponse)
}

void KVResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0;
  master_nodeid_ = GOOGLE_ULONGLONG(0);
}

KVResponse::~KVResponse() {
  // @@protoc_insertion_point(destructor:phxkv.KVResponse)
  SharedDtor();
}

void KVResponse::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void KVResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KVResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KVResponse_descriptor_;
}

const KVResponse& KVResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_phxkv_2eproto();
  return *default_instance_;
}

KVResponse* KVResponse::default_instance_ = NULL;

KVResponse* KVResponse::New(::google::protobuf::Arena* arena) const {
  KVResponse* n = new KVResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KVResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:phxkv.KVResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KVResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KVResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(master_nodeid_, ret_);
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool KVResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxkv.KVResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .phxkv.KVData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional int32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_master_nodeid;
        break;
      }

      // optional uint64 master_nodeid = 3;
      case 3: {
        if (tag == 24) {
         parse_master_nodeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &master_nodeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxkv.KVResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxkv.KVResponse)
  return false;
#undef DO_
}

void KVResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxkv.KVResponse)
  // optional .phxkv.KVData data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // optional int32 ret = 2;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  // optional uint64 master_nodeid = 3;
  if (this->master_nodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->master_nodeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:phxkv.KVResponse)
}

::google::protobuf::uint8* KVResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxkv.KVResponse)
  // optional .phxkv.KVData data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // optional int32 ret = 2;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  // optional uint64 master_nodeid = 3;
  if (this->master_nodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->master_nodeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:phxkv.KVResponse)
  return target;
}

int KVResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxkv.KVResponse)
  int total_size = 0;

  // optional .phxkv.KVData data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // optional int32 ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  // optional uint64 master_nodeid = 3;
  if (this->master_nodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->master_nodeid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KVResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxkv.KVResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KVResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KVResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxkv.KVResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxkv.KVResponse)
    MergeFrom(*source);
  }
}

void KVResponse::MergeFrom(const KVResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxkv.KVResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_data()) {
    mutable_data()->::phxkv::KVData::MergeFrom(from.data());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.master_nodeid() != 0) {
    set_master_nodeid(from.master_nodeid());
  }
}

void KVResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxkv.KVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KVResponse::CopyFrom(const KVResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxkv.KVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KVResponse::IsInitialized() const {

  return true;
}

void KVResponse::Swap(KVResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KVResponse::InternalSwap(KVResponse* other) {
  std::swap(data_, other->data_);
  std::swap(ret_, other->ret_);
  std::swap(master_nodeid_, other->master_nodeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KVResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KVResponse_descriptor_;
  metadata.reflection = KVResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KVResponse

// optional .phxkv.KVData data = 1;
bool KVResponse::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void KVResponse::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::phxkv::KVData& KVResponse::data() const {
  // @@protoc_insertion_point(field_get:phxkv.KVResponse.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::phxkv::KVData* KVResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::phxkv::KVData;
  }
  // @@protoc_insertion_point(field_mutable:phxkv.KVResponse.data)
  return data_;
}
::phxkv::KVData* KVResponse::release_data() {
  // @@protoc_insertion_point(field_release:phxkv.KVResponse.data)
  
  ::phxkv::KVData* temp = data_;
  data_ = NULL;
  return temp;
}
void KVResponse::set_allocated_data(::phxkv::KVData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:phxkv.KVResponse.data)
}

// optional int32 ret = 2;
void KVResponse::clear_ret() {
  ret_ = 0;
}
 ::google::protobuf::int32 KVResponse::ret() const {
  // @@protoc_insertion_point(field_get:phxkv.KVResponse.ret)
  return ret_;
}
 void KVResponse::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVResponse.ret)
}

// optional uint64 master_nodeid = 3;
void KVResponse::clear_master_nodeid() {
  master_nodeid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 KVResponse::master_nodeid() const {
  // @@protoc_insertion_point(field_get:phxkv.KVResponse.master_nodeid)
  return master_nodeid_;
}
 void KVResponse::set_master_nodeid(::google::protobuf::uint64 value) {
  
  master_nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxkv.KVResponse.master_nodeid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phxkv

// @@protoc_insertion_point(global_scope)
